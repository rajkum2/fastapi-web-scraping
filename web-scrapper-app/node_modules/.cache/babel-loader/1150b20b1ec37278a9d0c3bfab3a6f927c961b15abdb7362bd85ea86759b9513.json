{"ast":null,"code":"var _jsxFileName = \"/Users/kiran/Documents/GitHub/fastapi-web-scraping/web-scrapper-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchNews } from './services/NewService'; // Update the import path\nimport Sidebar from './components/Sidebar';\nimport NewsList from './components/NewsList';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Make sure you've installed React Bootstrap\nimport { Container, Row, Col } from 'react-bootstrap';\nimport './App.css'; // Ensure the path is correct\nimport Header from './components/Header'; // Import the Header component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [newsItems, setNewsItems] = useState([]);\n  const [filteredItems, setFilteredItems] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  useEffect(() => {\n    const loadData = async () => {\n      const data = await fetchNews(); // Update the function based on actual export\n      setNewsItems(data);\n      setFilteredItems(data);\n    };\n    loadData();\n  }, []);\n  const handleSearch = () => {\n    const filtered = newsItems.filter(item => {\n      var _item$title;\n      return (_item$title = item.title) === null || _item$title === void 0 ? void 0 : _item$title.toLowerCase().includes(searchTerm.toLowerCase());\n    });\n    setFilteredItems(filtered);\n  };\n  const handleClearSearch = () => {\n    setFilteredItems(newsItems);\n    setSearchTerm('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Sidebar, {\n            searchTerm: searchTerm,\n            setSearchTerm: setSearchTerm,\n            onSearch: handleSearch,\n            onClear: handleClearSearch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 8,\n          children: /*#__PURE__*/_jsxDEV(NewsList, {\n            newsItems: filteredItems,\n            setNewsItems: setNewsItems,\n            filteredItems: filteredItems,\n            setFilteredItems: setFilteredItems,\n            searchTerm: searchTerm,\n            setSearchTerm: setSearchTerm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"EvMtmdkrJjp/0NyCpc3yQXaqQkU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","fetchNews","Sidebar","NewsList","Container","Row","Col","Header","jsxDEV","_jsxDEV","App","_s","newsItems","setNewsItems","filteredItems","setFilteredItems","searchTerm","setSearchTerm","loadData","data","handleSearch","filtered","filter","item","_item$title","title","toLowerCase","includes","handleClearSearch","children","fluid","md","onSearch","onClear","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kiran/Documents/GitHub/fastapi-web-scraping/web-scrapper-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchNews } from './services/NewService'; // Update the import path\nimport Sidebar from './components/Sidebar';\nimport NewsList from './components/NewsList';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Make sure you've installed React Bootstrap\nimport { Container, Row, Col } from 'react-bootstrap';\nimport './App.css'; // Ensure the path is correct\nimport Header from './components/Header'; // Import the Header component\n\nconst App = () => {\n  const [newsItems, setNewsItems] = useState([]);\n  const [filteredItems, setFilteredItems] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  useEffect(() => {\n    const loadData = async () => {\n      const data = await fetchNews(); // Update the function based on actual export\n      setNewsItems(data);\n      setFilteredItems(data);\n    };\n\n    loadData();\n  }, []);\n\n  const handleSearch = () => {\n    const filtered = newsItems.filter(item =>\n      item.title?.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n    setFilteredItems(filtered);\n  };\n\n  const handleClearSearch = () => {\n    setFilteredItems(newsItems);\n    setSearchTerm('');\n  };\n\n  return (\n    <div>\n    <Container fluid>\n      <Row>\n        <Col md={4}>\n          <Sidebar\n            searchTerm={searchTerm}\n            setSearchTerm={setSearchTerm}\n            onSearch={handleSearch}\n            onClear={handleClearSearch}\n          />\n        </Col>\n        <Col md={8}>\n          <NewsList\n            newsItems={filteredItems}\n            setNewsItems={setNewsItems}\n            filteredItems={filteredItems}\n            setFilteredItems={setFilteredItems}\n            searchTerm={searchTerm}\n            setSearchTerm={setSearchTerm}\n          />\n        </Col>\n      </Row>\n    </Container>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}